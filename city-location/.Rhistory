a[,a > .5]
a
a[,a > .3]
a[,abs(a) > .3]
dput(colnames(a)[which(abs(a) > .3)])
dput(names(qf))
qplot(pop_black_perc, racial_f, data = qf)
qplot(pop_black_perc, firms_black_perc, data = qf)
within(qf, firms_black_perc <- firms_black / firms)
qplot(pop_black_perc, firms_black_perc, data = qf)
q <- within(qf, firms_black_perc <- firms_black / firms)
qplot(pop_black_perc, firms_black_perc, data = q)
qplot(pop_black_perc, firms_black_perc, data = q, colour = log10(pop08))
q <- within(qf, firms_black_perc <- firms_black / firms,#
color <- cutnumber(log10(pop08), 4))
qplot(pop_black_perc, firms_black_perc, data = q, colour = color)
q$color
q <- within(qf, firms_black_perc <- firms_black / firms, color <- cutnumber(log10(pop08), 4))
qplot(pop_black_perc, firms_black_perc, data = q, colour = color)
q <- within(qf, firms_black_perc <- firms_black / firms, #
color <- cutnumber(pop08, 4))
q$color
q <- within(qf, {#
	firms_black_perc <- firms_black / firms, #
	color <- cutnumber(log10(pop08), 4)#
})
q <- within(qf, {#
	firms_black_perc <- firms_black / firms, #
	color <- cut_number(log10(pop08), 4)#
})
q <- within(qf, {#
	firms_black_perc <- firms_black / firms, #
	color <- cut_number(log10(pop_08), 4)#
})
q <- within(qf, {#
	firms_black_perc <- firms_black / firms #
	color <- cut_number(log10(pop08), 4)#
})
qplot(pop_black_perc, firms_black_perc, data = q, colour = color)
q <- within(qf, {#
	firms_black_perc <- firms_black / firms #
	color <- cut_number(log10(pop08), 5)#
})
qplot(pop_black_perc, firms_black_perc, data = q, colour = color)
theme_get()
theme_update(panel.background = theme_rect(fill = "grey70"))
qplot(pop_black_perc, firms_black_perc, data = q, colour = color)
theme_update(panel.background = theme_rect(fill = "grey80"))
qplot(pop_black_perc, firms_black_perc, data = q, colour = color)
theme_update(panel.background = theme_rect(fill = "grey90"))
qplot(pop_black_perc, firms_black_perc, data = q, colour = color)
theme_update(panel.background = theme_rect(fill = "grey90", colour = NA))
qplot(pop_black_perc, firms_black_perc, data = q, colour = color)
theme_update(panel.background = theme_rect(fill = "grey95", colour = NA))
qplot(pop_black_perc, firms_black_perc, data = q, colour = color)
theme_update(panel.background = theme_rect(fill = "grey90", colour = NA))
qplot(pop_black_perc, firms_black_perc, data = q, colour = color)
dput(colnames(a)[which(abs(a) > .3)])
qplot(pop08, data = qf)
qplot(log10(pop08), data = qf)
qplot(log10(pop08), data = qf, binwidth = .1)
qplot(log10(pop08), data = qf, binwidth = .17)
qplot(log10(pop08), data = qf, binwidth = .17, color = log10(pop00))
qplot(log10(pop08), data = qf, binwidth = .17, colour = log10(pop00))
dput(names(qf))
qplot(unemploy, data = qf, binwidth = 10, facet = ~ state)
qplot(log10(unemploy), data = qf, binwidth = 10, facet = ~ state)
qplot(log10(unemploy), data = qf, binwidth = .5, facet = ~ state)
qplot(log10(unemploy), data = qf, binwidth = .5, facets = ~ state)
qplot(log10(unemploy), ..density.., data = qf, binwidth = .5, facets = ~ state, geom = "histogram")
qplot(log10(unemploy), ..density.., data = qf, binwidth = .5, group = state, geom = "freqpoly")
qplot(log10(unemploy), ..density.., data = qf, binwidth = .1, group = state, geom = "freqpoly")
qplot(log10(unemploy), ..density.., data = qf, binwidth = .2, color = state, geom = "freqpoly")
qplot(log10(unemploy), ..density.., data = qf, binwidth = .2, colour = state, geom = "freqpoly")
qplot(log10(unemploy), ..density.., data = qf, binwidth = .2, group = state, geom = "freqpoly")
z
attr(z, "class")
z + 1
z + 60
?attr
seconds <- function(x) x * 1
z + seconds(3)
60*60
3600 * 24
86400 * 7
?ISOdatetime
case <- read.csv("spcsim-clean.csv")
head(case)
str(case)
summary(case)
tail(case)
case <- read.csv("hu-2000-2007.csv")
dim(case)
head(case)
download.file("http://www.census.gov/geo/www/tiger/latlng,txt","latlng.txt")
download.file("http://www.census.gov/geo/www/tiger/latlng.txt","latlng.txt")
a <- read.csv(file.choose())
head(a)
a <- read.csv(file.choose(),skip = 2)
head9a
head(a)
a <- read.csv(file.choose(),skip = 2, header = FALSE)
head(a)
b <- a[1,]
b
options(stringsAsFactors = FALSE)
a <- read.csv(file.choose(),skip = 2, header = FALSE)
b <- a[1,]
b
namesA <- strsplit(b," ")
namesA
strsplit(b," ")[[1]]
strsplit(b," ")[[1]] -> namesA
namesA[nchar(namesA) > 0]
namesA <- namesA[nchar(namesA) > 0]
d <- a[2,]
d
strsplit(d," ")
strsplit(d," ")[[1]]
Row <- strsplit(d," ")[[1]]
Row <- Row[ nchar(Row) > 0]
Row
for(i in 1:10) print(nchar(a[i+1,]))
Row <- data.frame(ST = )
strsplit(a[2,],"")
Row <- data.frame(ST = as.numeric(substr(a[2,],2,3)), Place = as.numeric(substr(a[2,],5,9)), ANPSADPI = trim(substr(a[2,], 11,36)), AB = substr(a[2,], 37,38), INTPTLAT = as.numeric(substr(a[,2], 41, 48)) , INTPTLNG = -1 * as.numeric(substr(a[2,], 51,59)))
install.packages("R.oo")
library(R.oo)
Row <- data.frame(ST = as.numeric(substr(a[2,],2,3)), Place = as.numeric(substr(a[2,],5,9)), ANPSADPI = trim(substr(a[2,], 11,36)), AB = substr(a[2,], 37,38), INTPTLAT = as.numeric(substr(a[,2], 41, 48)) , INTPTLNG = -1 * as.numeric(substr(a[2,], 51,59)))
Row <- data.frame(ST = as.numeric(substr(a[2,],2,3)), PLACE = as.numeric(substr(a[2,],5,9)), ANPSADPI = trim(substr(a[2,], 11,36)), AB = substr(a[2,], 37,38), INTPTLAT = as.numeric(substr(a[2,], 41, 48)) , INTPTLNG = -1 * as.numeric(substr(a[2,], 51,59)))
Row
city <- Row[,3]
city
paste(trim(strsplit(city,"city")[[1]]),sep="",collapse="")
city <- "NewYork City city"
paste(trim(strsplit(city,"city")[[1]]),sep="",collapse="")
?for
l
a <- read.csv("latlng.txt",skip = 2, header = FALSE)
namesA <- strsplit(a[1,]," ")[[1]]
namesA <- namesA[nchar(namesA) > 0]
a <- a[-1,]
head(a)
for (i in 1:nrow(a)){#
	a[i,] <- data.frame(ST = as.numeric(substr(a[i,],2,3)), PLACE = as.numeric(substr(a[i,],5,9)), ANPSADPI = trim(substr(a[i,], 11,36)), AB = substr(a[i,], 37,38), INTPTLAT = as.numeric(substr(a[i,], 41, 48)) , INTPTLNG = -1 * as.numeric(substr(a[i,], 51,59)))#
	}
l
p
[]
nrow(a)
str(a)
dim(a)
length(a)
a[1]
a[1,]
namesA
a <- read.csv("latlng.txt",skip = 2, header = FALSE)
str(a)
namesA <- strsplit(a[1,]," ")[[1]]
namesA <- namesA[nchar(namesA) > 0]
dim(a)
a <- a[-1,]
dim(a)
str(a)
a <- read.csv("latlng.txt",skip = 2, header = FALSE)#
#
# pulling out variable names#
namesA <- strsplit(a[1,]," ")[[1]]#
namesA <- namesA[nchar(namesA) > 0]
nrow(a)
for (i in 2:nrow(a)){#
	latlng[i,] <- data.frame(ST = as.numeric(substr(a[i,],2,3)), PLACE = as.numeric(substr(a[i,],5,9)), ANPSADPI = trim(substr(a[i,], 11,36)), AB = substr(a[i,], 37,38), INTPTLAT = as.numeric(substr(a[i,], 41, 48)) , INTPTLNG = -1 * as.numeric(substr(a[i,], 51,59)))#
	}
for (i in 2:nrow(a)){#
	a[i,] <- data.frame(ST = as.numeric(substr(a[i,],2,3)), PLACE = as.numeric(substr(a[i,],5,9)), ANPSADPI = trim(substr(a[i,], 11,36)), AB = substr(a[i,], 37,38), INTPTLAT = as.numeric(substr(a[i,], 41, 48)) , INTPTLNG = -1 * as.numeric(substr(a[i,], 51,59)))#
	}
warnings()
dim(a)
head(a)
summary(a)
latlng <- data.frame()
for (i in 2:nrow(a)){#
	latlng[i,] <- data.frame(ST = as.numeric(substr(a[i,],2,3)), PLACE = as.numeric(substr(a[i,],5,9)), ANPSADPI = trim(substr(a[i,], 11,36)), AB = substr(a[i,], 37,38), INTPTLAT = as.numeric(substr(a[i,], 41, 48)) , INTPTLNG = -1 * as.numeric(substr(a[i,], 51,59)))#
	}
dim(latlng)
warnings()
head(latlng)
?data.frame
latlng <- data.frame(row.names = NamesA)
latlng <- data.frame(row.names = namesA)
dim(latlng)
latlng <- data.frame(col.names = namesA)
dim(latlng)
head(latlng)
?data.frame
latlng <- data.frame(names = namesA)
head(latlng)
latlng <- data.frame(namesA =)
latlng <- data.frame(namesA = namesA)
head(latlng)
latlng <- data.frame(col = 6)
head(latlng)
latlng <- data.frame(a = 1, b = 2, c= 3, d = 4, e = 5, f = 6)
head(latlng)
names(latlng) <- namesA
head(latlng)
latlng <- data.frame()
dim(latlng)
names(latlng) <- namesA
a <- read.csv("latlng.txt",skip = 2, header = FALSE)
str(a)
a[1,]
b <- a[1:3,]
b
b[-1,]
str(b)
a <- as.data.frame(a[-1,])
str(a)
latlng <- data.frame(a = 1, b = 2, c= 3, d = 4, e = 5, f = 6)
names(latlng) <- namesA
for (i in 2:nrow(a)){#
	latlng[i-1,] <- data.frame(ST = as.numeric(substr(a[i,],2,3)), PLACE = as.numeric(substr(a[i,],5,9)), ANPSADPI = trim(substr(a[i,], 11,36)), AB = substr(a[i,], 37,38), INTPTLAT = as.numeric(substr(a[i,], 41, 48)) , INTPTLNG = -1 * as.numeric(substr(a[i,], 51,59)))#
	}
warnings()
head(latlng)
latlng[is.na(latlng[,2])]
latlng[is.na(latlng[,2]),]
latlng[is.na(latlng),]
latlng[13732:13735,]
latlng[22145:22148,]
?read.csv
a <- read.table("latlng.txt",sep="|", skip = 2, header = FALSE)
dim(a)
head(a)
head(a)
a <- read.table("latlng.txt",sep="\n", skip = 2, header = FALSE)
dim(a)
download.file("http://www.census.gov/geo/www/tiger/latlng.txt","latlng.txt")#
#
options(stringsAsFactors = FALSE)#
#a <- read.csv("latlng.txt",skip = 2, header = FALSE)#
a <- read.table("latlng.txt",sep="|", skip = 2, header = FALSE)
dim(a)
download.file("http://www.census.gov/geo/www/tiger/latlng.txt","latlng.txt")
dim(a)
a <- read.table("latlng.txt",sep="|", skip = 2, header = FALSE)
dim(a)
a <- read.table("latlng.txt",sep="|", skip = 3, header = FALSE)
head(a)
dim(a)
a[1,]
a <- read.table("latlng.txt",sep="ABCDEFGHIJKLMNOP", skip = 3, header = FALSE)
a <- read.table("latlng.txt",sep="@", skip = 3, header = FALSE)
dim(a)
?read.table
a <- read.csv("latlng.txt",skip = 2, header = FALSE)
dim(a)
a <- read.csv("latlng.txt",skip = 2, header = FALSE)
dim(a)
#a <- read.table("latlng.txt",sep="|", skip = 2, header = FALSE)
namesA <- strsplit(a[1,]," ")[[1]]#
namesA <- namesA[nchar(namesA) > 0]#
a <- as.data.frame(a[-1,])
a <- as.data.frame(a[2:10,])
dim(a)
latlng <- data.frame(a = 1, b = 2, c= 3, d = 4, e = 5, f = 6)#
names(latlng) <- namesA
#
for (i in 2:nrow(a)){#
	latlng[i-1,] <- data.frame(ST = as.numeric(substr(a[i,],2,3)), PLACE = as.numeric(substr(a[i,],5,9)), ANPSADPI = trim(substr(a[i,], 11,36)), AB = substr(a[i,], 37,38), INTPTLAT = as.numeric(substr(a[i,], 41, 48)) , INTPTLNG = -1 * as.numeric(substr(a[i,], 51,59)))#
	}
latlng
for (i in 1:nrow(latlng)){#
	latlng[i,3] <- paste(trim(strsplit(latlng[i,3]," city")[[1]]),sep="",collapse="")#
	latlng[i,3] <- paste(trim(strsplit(latlng[i,3]," town")[[1]]),sep="",collapse="")#
	latlng[i,3] <- paste(trim(strsplit(latlng[i,3]," CDP")[[1]]),sep="",collapse="")#
	}
latlng
names(latlng) <-c("fips_st", "fips_place", "city", "state", "latitude", "longitude")
latlng
?write.csv
library(R.oo)#
latlng <- data.frame(a = 1, b = 2, c= 3, d = 4, e = 5, f = 6)#
names(latlng) <- namesA#
#
for (i in 2:nrow(a)){#
	latlng[i-1,] <- data.frame(ST = as.numeric(substr(a[i,],2,3)), PLACE = as.numeric(substr(a[i,],5,9)), ANPSADPI = trim(substr(a[i,], 11,36)), AB = substr(a[i,], 37,38), INTPTLAT = as.numeric(substr(a[i,], 41, 48)) , INTPTLNG = -1 * as.numeric(substr(a[i,], 51,59)))#
	}#
#
# removing city/town/CDP designations#
for (i in 1:nrow(latlng)){#
	latlng[i,3] <- paste(trim(strsplit(latlng[i,3]," city")[[1]]),sep="",collapse="")#
	latlng[i,3] <- paste(trim(strsplit(latlng[i,3]," town")[[1]]),sep="",collapse="")#
	latlng[i,3] <- paste(trim(strsplit(latlng[i,3]," CDP")[[1]]),sep="",collapse="")#
	}#
	#
# change names#
names(latlng) <-c("fips_st", "fips_place", "city", "state", "latitude", "longitude")#
#
# save file#
save(latlng, file = "latlng.rdata")#
write.csv(latling, file = "latlng.csv")
a <- read.csv("latlng.txt",skip = 2, header = FALSE)#
#
# pulling out variable names#
namesA <- strsplit(a[1,]," ")[[1]]#
namesA <- namesA[nchar(namesA) > 0]#
a <- as.data.frame(a[-1,])#
#
#
# creating columns#
#
library(R.oo)#
latlng <- data.frame(a = 1, b = 2, c= 3, d = 4, e = 5, f = 6)#
names(latlng) <- namesA#
#
for (i in 2:nrow(a)){#
	latlng[i-1,] <- data.frame(ST = as.numeric(substr(a[i,],2,3)), PLACE = as.numeric(substr(a[i,],5,9)), ANPSADPI = trim(substr(a[i,], 11,36)), AB = substr(a[i,], 37,38), INTPTLAT = as.numeric(substr(a[i,], 41, 48)) , INTPTLNG = -1 * as.numeric(substr(a[i,], 51,59)))#
	}#
#
# removing city/town/CDP designations#
for (i in 1:nrow(latlng)){#
	latlng[i,3] <- paste(trim(strsplit(latlng[i,3]," city")[[1]]),sep="",collapse="")#
	latlng[i,3] <- paste(trim(strsplit(latlng[i,3]," town")[[1]]),sep="",collapse="")#
	latlng[i,3] <- paste(trim(strsplit(latlng[i,3]," CDP")[[1]]),sep="",collapse="")#
	}#
	#
# change names#
names(latlng) <-c("fips_st", "fips_place", "city", "state", "latitude", "longitude")#
#
# save file#
save(latlng, file = "latlng.rdata")#
write.csv(latlng, file = "latlng.csv")
dim(latlng)
head(latling)
head(latlng)
latling[1,5]/100000
latlng[1,5]/100000
latlng[1,5]/1000000
?within
test <- within(latlng, {#
	latitude <- latitude / 1000000#
	longitude <- longitude / 1000000)#
	}
test <- within(latlng, {#
	latitude <- latitude / 1000000#
	longitude <- longitude / 1000000#
	})
head(test)
latlng <- within(latlng, {#
	latitude <- latitude / 1000000#
	longitude <- longitude / 1000000#
	})
save(latlng, file = "latlng.rdata")#
write.csv(latlng, file = "latlng.csv")
