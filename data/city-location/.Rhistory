location <- merge(city, county, by = c("fips_st", "fips_place"), all.x = T)
location <- ddply(location, .(fips_st, fips_place), expand)
head(location)
expand <- function (df) {#
	counties <- strsplit(df$county[1], ", ")#
	if (is.na(df$county[1])) return(df)#
	data.frame( fips_st = df$fips_st[1],#
			fips_place = df$fips_place[1],#
			longitude = df$longitude[1],#
			latitude = df$latitude[1],#
			city = df$city[1],#
			state = df$state[1],#
			county = unlist(counties))#
}
location <- ddply(location, .(fips_st, fips_place), expand)
head(location)
dim(location)
location[10:60,]
download.file("http://www.census.gov/population/www/metroareas/lists/2007/List2.txt", "cbsa2007-11.txt")
?read.txt
?read.csv
?read.fwf
cbsa <- read.fwf("cbsa2007-11.txt.", skip = 10, sep=",", strip.white = T)
vars <- c(cbsa = 6, #
		name = 75, #
		state = 2,#
		place = 8)
cbsa <- read.fwf("cbsa2007-11.txt.", vars, skip = 10, sep=",", strip.white = T)
cbsa <- read.fwf("cbsa2007-11.txt.", vars, skip = 10, sep=",", strip.white = T)
cbsa <- read.fwf("cbsa2007-11.txt", vars, skip = 10, sep=",", strip.white = T)
cbsa <- read.csv("cbsa2007-11.txt", skip = 10,header = F)
head(cbsa)
cbsa <- read.csv("cbsa2007-11.txt", skip = 10,sep = "@", header = F)
head(cbsa)
nchar(cbsa[1,])
nchar(cbsa[2,])
msa <- cbsa[nchar(cbsa[,1]) < 80,]
traceback()
dim(cbsa)
msa <- data.frame()
msa
whole_cbsa <- read.csv("cbsa2007-11.txt", skip = 10,sep = "@", header = F)
msa <- data.frame()#
cbsa <- data.frame()#
m <- 1#
n <- 1#
for (i in 1:nrow(whole_cbsa)){#
	if (nchar(whole_cbsa[i,1]) < 80){#
		msa[m,1] <- whole_cbsa[i,1]#
		m <- m + 1#
	}else{#
		cbsa[n,1] <- whole_cbsa[i,1]#
		n <- n + 1#
	}#
}
whole_cbsa[1,1]
nchar(whole_cbsa[1,1])
tail(whole_cbsa)
whole_cbsa[1000:1010,]
whole_cbsa[1500:1510,]
whole_cbsa[1750:1760,]
whole_cbsa[2000:2010,]
whole_cbsa[1750:2000,]
?strsplit
whole_cbsa[c(1:2),] <- strsplit(whole_cbsa[1],6, fixed = T)
whole_cbsa$cbsa <- substr(whole_cbsa$V1,1, 5)
head(whole_cbsa)
get_msa_name <- function(df) trim(substr(df[1,1],6, 80))
library(R.oo)
det_msa_name(whole_cbsa[whole_cbsa$cbsa == 44420)
det_msa_name(whole_cbsa[whole_cbsa$cbsa == 44420,])
get_msa_name(whole_cbsa[whole_cbsa$cbsa == 44420,])
msa <- ddply(whole_cbsa, .(cbsa), get_msa_name)
recover()
traceback()
head(whole_cbsa)
head(whole_cbsa)
?read.fwf
a <- whole_cbsa[1:10,]
a
a
library(R.oo)
trim(a)
for(i in 1:nrow(a)) a[i,] <- trim(a[i,])
a
get_code <- function(line)#
{#
    as.numeric(trim(substr(line, 1, 6)))#
}
get_code(a[1,])
remove_cbsa <- function(line, cbsaCode)#
    trim(gsub(as.character(cbsaCode), "", line))
ldply(a,fun = remove_cbsa, cbsaCode = cbsa)
for(i in 1:nrow(a)) a[i,1] <- remove_cbsa(a[i,1],a[i,2])
a
whole_cbsa[1:100,]
a
a[nchar(a[,1]) < max(nchar(a[,1])),]
a1 <- a[nchar(a[,1]) < max(nchar(a[,1])),]
a1
for(i in 1:nrow(a1)) a1[i,1] <- gsub("Micropolitan Statistical Area", "BOB", a1[i,1])
a1
for(i in 1:nrow(a1)) a1[i,1] <- gsub("Metropolitan Statistical Area", "Sally", a1[i,1])
a1
msa <- whole_cbsa[nchar(whole_cbsa[,1]) < max(nchar(whole_cbsa[,1])),]
msa <- whole_cbsa[nchar(whole_cbsa[,1]) < max( nchar( whole_cbsatra[, 1])), ]
traceback()
msa <- whole_cbsa[nchar(whole_cbsa[,1]) < max( nchar( whole_cbsa[, 1])), ]
traceback()
nchar(whole_cbsa[,1])
whole_cbsa[,1]
for(i in 1:nrow(whole_cbsa)) print(i); cat("  ",nchar(whole_cbsa[i,1]))
for(i in 1:nrow(whole_cbsa)) {print(i); cat("  ",nchar(whole_cbsa[i,1]))}
for(i in 1:nrow(whole_cbsa)) {cat("\n",i,"  ",nchar(whole_cbsa[i,1]))}
whole_cbsa[14,]
nchar(whole_cbsa[14,])
nchar(whole_cbsa)
?nchar
for(i in 1:nrow(whole_cbsa)) {cat("\n",i,"  ",nchar(whole_cbsa[i,1], type = "width"))}
msa <- whole_cbsa[wchar(whole_cbsa[,1]) < max( wchar( whole_cbsa[, 1])), ]
wchar <- function(string)#
	nchar(char, type = "width")
msa <- whole_cbsa[wchar(whole_cbsa[,1]) < max( wchar( whole_cbsa[, 1])), ]
wchar <- function(string)#
	nchar(string, type = "width")#
#
# Separating msa rows from cbsa rows#
msa <- whole_cbsa[wchar(whole_cbsa[,1]) < max( wchar( whole_cbsa[, 1])), ]
head(msa)
msa
wchar(whole_cbsa[,1]) < max( wchar( whole_cbsa[, 1]))
wchar(whole_msa[,1])
wchar(whole_cbsa[,1])
z <- 1:nrow(whole_cbsa)
z[is.na(wchar(whole_cbsa[,1]))]
whole_cbsa[is.na(wchar(whole_cbsa[,1]))]
whole_cbsa[is.na(wchar(whole_cbsa[,1])),]
whole_cbsa <- read.csv("cbsa2007-11.txt", skip = 10,sep = "@", header = F)#
#
# extracting cbsa code#
whole_cbsa$cbsa <- substr(whole_cbsa$V1,1,5)#
#
#
for(i in 1:nrow(whole_cbsa))#
{#
	# remove accent a#
	 whole_cbsa[i,1] <- gsub("\xe1","a",whole_cbsa[i,1])#
	# remove u double dot#
     whole_cbsa[i,1] <- gsub("\xfc","u",whole_cbsa[i,1])#
}#
#
#
wchar <- function(string)#
	nchar(string, type = "width")#
#
# Separating msa rows from cbsa rows#
msa <- whole_cbsa[wchar(whole_cbsa[,1]) < max( wchar( whole_cbsa[, 1])), ]
z <- whole_cbsa[15,]
z
gsub("\\\xe1","a",z)
gsub("\xe1","a",z)
gsub("//\xe1","a",z)
?gsub("\xe1","a",z)
z
?gsub("\xe1","a",z[1,])
gsub("\xe1","a",z[1,1])
gsub("[\]xe1","a",z[1,1])
gsub("[:\:]xe1","a",z[1,1])
gsub("[:punct:]xe1","a",z[1,1])
?gsub
gsub("[:punct:]xe[1]","a",z[1,1])
whole_cbsa <- read.csv("cbsa2007-11.txt", skip = 10,sep = "@", header = F)#
#
# extracting cbsa code#
whole_cbsa$cbsa <- substr(whole_cbsa$V1,1,5)#
#
#
wchar <- function(string)#
	nchar(string, type = "width")#
#
pos <- is.na(wchar(whole_cbsa[,1]))#
whole_cbsa <- whole_cbsa[!pos,]#
#
# Separating msa rows from cbsa rows#
msa <- whole_cbsa[wchar(whole_cbsa[,1]) < max( wchar( whole_cbsa[, 1])), ]
head(msa)
whole_cbsa <- read.csv("cbsa2007-11.txt", skip = 10,sep = "@", header = F)#
#
# extracting cbsa code#
whole_cbsa$cbsa <- substr(whole_cbsa$V1,1,5)#
#
remove_cbsa <- function(line, cbsaCode)#
    trim(gsub(as.character(cbsaCode), "", line))#
#
for(i in 1:nrow(whole_cbsa)) whole_cbsa[i,1] <- remove_cbsa(whole_cbsa[i,1],whole_cbsa[i,2])#
#
wchar <- function(string)#
	nchar(string, type = "width")#
#
pos <- is.na(wchar(whole_cbsa[,1]))#
whole_cbsa <- whole_cbsa[!pos,]#
#
# Separating msa rows from cbsa rows#
msa <- whole_cbsa[wchar(whole_cbsa[,1]) < max( wchar( whole_cbsa[, 1])), ]
whole_cbsa <- read.csv("cbsa2007-11.txt", skip = 10,sep = "@", header = F)#
#
# extracting cbsa code#
whole_cbsa$cbsa <- substr(whole_cbsa$V1,1,5)#
#
#
#
wchar <- function(string)#
	nchar(string, type = "width")#
#
pos <- is.na(wchar(whole_cbsa[,1]))#
whole_cbsa <- whole_cbsa[!pos,]#
#
remove_cbsa <- function(line, cbsaCode)#
    trim(gsub(as.character(cbsaCode), "", line))#
for(i in 1:nrow(whole_cbsa)) whole_cbsa[i,1] <- remove_cbsa(whole_cbsa[i,1],whole_cbsa[i,2])#
#
# Separating msa rows from cbsa rows#
msa <- whole_cbsa[wchar(whole_cbsa[,1]) < max( wchar( whole_cbsa[, 1])), ]
head(msa)
cbsa <- whole_cbsa[wchar(whole_cbsa[,1]) == max( wchar( whole_cbsa[, 1])), ]
head(cbsa)
cbsa$fips_st <- substr(cbsa[,1], 71,72)
head(cbsa)
cbsa$fips_st <- as.numeric(substr(cbsa[,1], 71, 72))
head(cbsa)
str(cbsa)
summary(cbsa$fips_st)
cbsa[cbsa$fips_st == NA,]
cbsa[is.na(cbsa$fips_st),]
dim(cbsa)
head(msa)
tail(msa)
msa[nrow(msa)+1,] <- cbsa[is.na(cbsa$fips_st),]
msa[nrow(msa)+1,] <- cbsa[is.na(cbsa$fips_st),c(1:2)]
tail(msa)
msa <- msa[-nrow(msa),]
cbsa$fips_place <- as.numeric(substr(cbsa[,1], 76, 80))
cbsa[is.na(cbsa$fips_place),]
which(is.na(cbsa$fips_place))
cbsa[826,]
cbsa <- cbsa[-826,]
head(cbsa)
cbsa <- cbsa[,-1]
head(cbsa)
head(msa)
for (i in 1:nrow(msa)){#
	gsub(" Metropolitan Statistical Area", "", msa[i,1])#
	gsub(" Micropolitan Statistical Area", "", msa[i,1])#
}
head(msa)
for (i in 1:nrow(msa)){#
	gsub(" Metropolitan Statistical Area", "", msa[i,1])#
	gsub(" Micropolitan Statistical Area", "", msa[i,1])#
}
head(msa)
for (i in 1:nrow(msa)){#
	msa[i,1] <- gsub(" Metropolitan Statistical Area", "", msa[i,1])#
	msa[i,1] <- gsub(" Micropolitan Statistical Area", "", msa[i,1])#
}
head(msa)
names(msa) <- c("msa_name", "cbsa")
head(msa)
head(cbsa)
merge(msa, cbsa, by = "cbsa")
str(cbsa)
for (i in 1:nrow(msa)){#
	msa[i,1] <- trim(gsub(" Metropolitan Statistical Area", "", msa[i,1]))#
	msa[i,1] <- trim(gsub(" Micropolitan Statistical Area", "", msa[i,1]))#
}
head(msa)
head(cbsa)
cbsa$cbsa <- as.numeric(cbsa$cbsa)
cbsae <- merge(msa, cbsa, by = "cbsa")
head(cbsae)
locatione <- merge(location, cbsa, by = c("fips_st", "fips_place"), all. = T)
locatione <- merge(location, cbsa, by = c("fips_st", "fips_place"), all.x = T)
head(locatione)
locatione <- merge(location, cbsa, by = c("fips_st", "fips_place"), all = T)
head(locatione)
cbsa <- merge(msa, cbsa, by = "cbsa")
locatione <- merge(location, cbsa, by = c("fips_st", "fips_place"), all.x = T)
head(locatione)
locationae[locationae$city == "Akron",]
locatione[locatione$city == "Akron",]
location <- merge(location, cbsa, by = c("fips_st", "fips_place"), all.x = T)
write.table(location, "location_database.csv", sep =",", row = F)
download("http://www.census.gov/population/www/metroareas/lists/2007/List6.txt", "csacodes.txt")
download.file("http://www.census.gov/population/www/metroareas/lists/2007/List6.txt", "csacodes.txt")
?read.fwf
texas <- location[location$state == "TX",]
qplot(longitude, latitude, data = texas)
library(ggplot2)
qplot(longitude, latitude, data = texas)
qplot(longitude, latitude, data = texas, colour = cbsa)
qplot(longitude, latitude, data = texas, colour = city)
csa <- read.fwf("csacodes.txt", width = c(3,7), skip = 11, strip.white = T)
head(csa)
dim(csa)
csa <- na.omit(csa)
head(csa)
names(csa) <- c("csa", "cbsa")
head(csa)
csa$csa <- as.numeric(csa$csa)
csa$cbsa <- as.numeric(csa$cbsa)
try <- merge(location, csa, by = c("cbsa"), all.x = T)
dim(try)
head(try)
dim(na.omit(try))
try[try$city == "Albany",]
location <- merge(location, csa, by = c("cbsa"), all.x = T)
head(location)
location <-location[,c(3:9, 1, 10, 2)]
head(location)
write.table(location, "location_database.csv", sep =",", row = F)
download.file("http://www.census.gov/population/www/metroareas/lists/2007/List4.txt", "metrocounties2007-11.csv")
download.file("http://www.census.gov/population/www/metroareas/lists/2007/List5.txt", "microcounties2007-11.csv")
?read.fwf
metro <- read.fwf("metrocounties2007-11.csv", width = c(8,8,40), skip = 11, strip.white = T)
metro <- read.csv("metrocounties2007-11.csv", sep = "@", skip = 11)
micro <- read.csv("microcounties2007-11.csv", sep = "@", skip = 11)
head(micro)
micro <- read.csv("microcounties2007-11.csv", sep = "@", skip = 11, header = F)
metro <- read.csv("metrocounties2007-11.csv", sep = "@", skip = 11, header = F)
head(micro)
micro$cbsa <- substr(micro[,1], 1,5)
head(micro)
micro$fips_st <- substr(micro[,1], 9, 10)
micro$fips_county <- substr(micro[,1], 11, 13)
micro$cbsa <- as.numeric(substr(micro[,1], 1,5))
micro$fips_st <- as.numeric(substr(micro[,1], 9, 10))
micro$fips_county <- as.numeric(substr(micro[,1], 11, 13))
micro <- micro[!is.na(micro$fips_st),]
head(micro)
for (i in 1:nrow(micro)){#
	micro[i,1] <- trim(gsub(micro$cbsa, "", msa[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_county, "", msa[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_st, "", msa[i,1]))#
}
head(micro)
for (i in 1:nrow(micro)){#
	micro[i,1] <- trim(gsub(micro$cbsa, "", micro[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_county, "", micro[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_st, "", micro[i,1]))#
}
micro <- read.csv("microcounties2007-11.csv", sep = "@", skip = 11, header = F)
micro$cbsa <- as.numeric(substr(micro[,1], 1,5))#
micro$fips_st <- as.numeric(substr(micro[,1], 9, 10))#
micro$fips_county <- as.numeric(substr(micro[,1], 11, 13))#
micro <- micro[!is.na(micro$fips_st),]
for (i in 1:nrow(micro)){#
	micro[i,1] <- trim(gsub(micro$cbsa, "", micro[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_county, "", micro[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_st, "", micro[i,1]))#
}
head(micro)
for (i in 1:nrow(micro)){#
	micro[i,1] <- trim(gsub(micro$cbsa[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_county[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_st[i], "", micro[i,1]))#
}
micro <- read.csv("microcounties2007-11.csv", sep = "@", skip = 11, header = F)#
#
# extracting codes#
micro$cbsa <- as.numeric(substr(micro[,1], 1,5))#
micro$fips_st <- as.numeric(substr(micro[,1], 9, 10))#
micro$fips_county <- as.numeric(substr(micro[,1], 11, 13))#
micro <- micro[!is.na(micro$fips_st),]#
#
# isolating counties#
for (i in 1:nrow(micro)){#
	micro[i,1] <- trim(gsub(micro$cbsa[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_county[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_st[i], "", micro[i,1]))#
}
head(micro)
micro <- read.csv("microcounties2007-11.csv", sep = "@", skip = 11, header = F)#
#
# extracting codes#
micro$cbsa <- as.numeric(substr(micro[,1], 1,5))#
micro$fips_st <- as.numeric(substr(micro[,1], 9, 10))#
micro$fips_county <- as.numeric(substr(micro[,1], 11, 13))#
micro <- micro[!is.na(micro$fips_st),]#
#
# isolating counties#
for (i in 1:nrow(micro)){#
	micro[i,1] <- trim(gsub(micro$cbsa[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_county[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_st[i], "", micro[i,1]))#
	micro[i,1] <- trim("0", "", micro[i,1]))#
}
for (i in 1:nrow(micro)){#
	micro[i,1] <- trim(gsub(micro$cbsa[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_county[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_st[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub("0", "", micro[i,1]))#
}
head(micro)
for (i in 1:nrow(micro)){#
	micro[i,1] <- trim(gsub(micro$cbsa[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_county[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_st[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub("0", "", micro[i,1]))#
	micro[i,1] <- strsplit(micro[i,1], ", ")[[1]]#
}
traceback()
micro <- read.csv("microcounties2007-11.csv", sep = "@", skip = 11, header = F)#
#
# extracting codes#
micro$cbsa <- as.numeric(substr(micro[,1], 1,5))#
micro$fips_st <- as.numeric(substr(micro[,1], 9, 10))#
micro$fips_county <- as.numeric(substr(micro[,1], 11, 13))#
micro <- micro[!is.na(micro$fips_st),]#
#
# isolating counties#
for (i in 1:nrow(micro)){#
	micro[i,1] <- trim(gsub(micro$cbsa[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_county[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_st[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub("0", "", micro[i,1]))#
	micro[i,1] <- strsplit(micro[i,1], ", ")[[1]]#
}
for (i in 1:nrow(micro)){#
	micro[i,1] <- trim(gsub(micro$cbsa[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_county[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_st[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub("0", "", micro[i,1]))#
	micro[i,1] <- strsplit(micro[i,1], ", ")[1]#
}
warnings()
head(micro)
micro <- read.csv("microcounties2007-11.csv", sep = "@", skip = 11, header = F)#
#
# extracting codes#
micro$cbsa <- as.numeric(substr(micro[,1], 1,5))#
micro$fips_st <- as.numeric(substr(micro[,1], 9, 10))#
micro$fips_county <- as.numeric(substr(micro[,1], 11, 13))#
micro <- micro[!is.na(micro$fips_st),]#
#
# isolating counties#
for (i in 1:nrow(micro)){#
	micro[i,1] <- trim(gsub(micro$cbsa[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_county[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_st[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub("0", "", micro[i,1]))#
	micro[i,1] <- strsplit(micro[i,1], ", ")[[1]][1]#
}
head(micro)
for (i in 1:nrow(micro)){#
	micro[i,1] <- trim(gsub(micro$cbsa[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_county[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub(micro$fips_st[i], "", micro[i,1]))#
	micro[i,1] <- trim(gsub("0", "", micro[i,1]))#
	micro[i,1] <- strsplit(micro[i,1], ", ")[[1]][1]#
	micro[i,1] <- strsplit(micro[i,1], " Parish")[[1]][1]#
	micro[i,1] <- strsplit(micro[i,1], " County")[[1]][1]#
}
head(micro)
names(micro)[1] <- "county"
head(micro)
