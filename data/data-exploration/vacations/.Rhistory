dim(data)
head(data)
data[1,1]
	data <- data[!is.na(data[,1]),]
	data <- data[!is.na(data[,1]),]
head(data)
dim(data)
data[1,2]
data[1,1]
data[2,1]
	data <- data[!is.na(data[,1]) & data[,1] != "",]
dim(data)
head(data)
data[4,1]
?caps
?allcaps
data
		strip.white = TRUE, stringsAsFactors = FALSE)
	data <- read.fwf(file_path, vars,#
		strip.white = TRUE, stringsAsFactors = FALSE)
	data <- na.omit(data[data[,1] != "",])
dim(data)
data
for (i in 1:nrow(data)){#
		line <- trim(strsplit(data[i,2], "  ")[[1]])#
		data$length[i] <- line[1]#
		data$start[i] <- trim(strsplit(data$range[i], "-")[[1]])#
		test <- substr(data$start[i], 1, 1)#
		if(test == "("){ #
			data$start[i] <- substr(data$start[i], 2,5)#
		}#
	}
str(data)
	for (i in 1:nrow(data)){#
		line <- trim(strsplit(data[i,2], "  ")[[1]])#
		data$length[i] <- line[1]#
		range <- line(length(line))#
		data$start[i] <- trim(strsplit(data$range[i], "-")[[1]])#
		test <- substr(data$start[i], 1, 1)#
		if(test == "("){ #
			data$start[i] <- substr(data$start[i], 2,5)#
		}#
	}
traceback()
	for (i in 1:nrow(data)){#
		line <- trim(strsplit(data[i,2], "  ")[[1]])#
		data$length[i] <- line[1]#
		range <- line[length(line)]#
		data$start[i] <- trim(strsplit(data$range[i], "-")[[1]])#
		test <- substr(data$start[i], 1, 1)#
		if(test == "("){ #
			data$start[i] <- substr(data$start[i], 2,5)#
		}#
	}
	for (i in 1:nrow(data)){#
		line <- trim(strsplit(data[i,2], "  ")[[1]])#
		data$length[i] <- line[1]#
		range <- line[length(line)]#
		data$start[i] <- trim(strsplit(range, "-")[[1]])#
		test <- substr(data$start[i], 1, 1)#
		if(test == "("){ #
			data$start[i] <- substr(data$start[i], 2,5)#
		}#
	}
warnings()
head(data)
?nchar
nchar(try)
try
nchar("sftrd")
	data <- data[nchar(data[,3]) <=4 & nchar(data[,4]) <=4]
	data <- data[nchar(data[,3]) <=4 & nchar(data[,4]) <= 4,]
dim(data)
head(data)
	data[, c(1,3,4)]
data[18,1]
nchar(data[1,1])
data[1,1
]
"\f"
?substr
	for (i in 1:nrow(data)){#
		line <- trim(strsplit(data[i,2], "  ")[[1]])#
		data$length[i] <- line[1]#
		range <- line[length(line)]#
		data$start[i] <- trim(strsplit(range, "-")[[1]])#
		test <- substr(data$start[i], 1, 1)#
		if(test == "("){ #
			data$start[i] <- substr(data$start[i], 2,5)#
		test2 <-substr(data$V1, 1, 2)#
		if(test2 == "\f") #
			data$V1[i] <- substr(data$V1[i], 3, 10)#
		}#
	}
head(data)
	data <- data[nchar(data[,3]) <=4 & nchar(data[,4]) <= 4,]
	data[, c(1,3,4)]
data[18,1]
nchar(data[18,1])
data[data$V1 == "HRNUMHOU",]
data[data$V1 == "\fHRNUMHOU",]
for (i in 1:nrow(data)){
		test2 <-substr(data$V1, 1, 2)
		if(test2 == "\f")
			data$V1[i] <- substr(data$V1[i], 3, 10)
		}
	data <- read.fwf(file_path, vars,#
		strip.white = TRUE, stringsAsFactors = FALSE)
	data <- na.omit(data[data[,1] != "",])
	for (i in 1:nrow(data)){#
		line <- trim(strsplit(data[i,2], "  ")[[1]])#
		data$length[i] <- line[1]#
		range <- line[length(line)]#
		data$start[i] <- trim(strsplit(range, "-")[[1]])#
		test <- substr(data$start[i], 1, 1)#
		if(test == "("){ #
			data$start[i] <- substr(data$start[i], 2,5)#
		}#
		test2 <-substr(data$V1, 1, 2)#
		if(test2 == "\f") {#
			data$V1[i] <- substr(data$V1[i], 3, 10)#
		}#
	}
	data <- data[nchar(data[,3]) <=4 & nchar(data[,4]) <= 4,]
	data[, c(1,3,4)]
	for (i in 1:nrow(data)){
		test2 <-substr(data$V1, 1, 2)
		if(test2 == "\\f") {
			data$V1[i] <- substr(data$V1[i], 3, 10)
		}
	}
data
warnings()
test2
	for (i in 1:nrow(data)){
		test2 <-substr(data$V1[i], 1, 2)
		if(test2 == "\\f") {
			data$V1[i] <- substr(data$V1[i], 3, 10)
		}
	}
	data[, c(1,3,4)]
	for (i in 1:nrow(data)){
	test2 <-substr(data$V1[i], 1, 2)#
		if(test2 == "\f") {#
			data$V1[i] <- substr(data$V1[i], 3, 10)#
		}#
	}
	test2 <-substr(data$V1[i], 1, 2)#
		if(test2 == "\f") {#
			data$V1[i] <- substr(data$V1[i], 3, 10)#
		}#
	}
	data[, c(1,3,4)]
substr(data$V1[18], 1, 2)
substr(data$V1[18], 1, 1)
substr(data$V1[18], 0, 1)
substr(data$V1[18], 0, 0)
substr(data$V1[18], 0, 1)
		test2 <-substr(data$V1[i], 1, 1)
test2
		test2 <-substr(data$V1, 1, 1)
test2
test2 == "\f"
	data <- read.fwf(file_path, vars,#
		strip.white = TRUE, stringsAsFactors = FALSE)
	data <- na.omit(data[data[,1] != "",])
	for (i in 1:nrow(data)){#
		line <- trim(strsplit(data[i,2], "  ")[[1]])#
		data$length[i] <- line[1]#
		range <- line[length(line)]#
		data$start[i] <- trim(strsplit(range, "-")[[1]])#
		test <- substr(data$start[i], 1, 1)#
		if(test == "("){ #
			data$start[i] <- substr(data$start[i], 2,5)#
		}#
		test2 <-substr(data$V1[i], 1, 1)#
		if(test2 == "\f") {#
			data$V1[i] <- substr(data$V1[i], 3, 10)#
		}#
	}
	data <- data[nchar(data[,3]) <=4 & nchar(data[,4]) <= 4,]
	data[, c(1,3,4)]
dim(data)
trim_data <- function(data){	#
	data <- na.omit(data[data[,1] != "",])#
	for (i in 1:nrow(data)){#
		line <- trim(strsplit(data[i,2], "  ")[[1]])#
		data$length[i] <- line[1]#
		range <- line[length(line)]#
		data$start[i] <- trim(strsplit(range, "-")[[1]])#
		test <- substr(data$start[i], 1, 1)#
		if(test == "("){ #
			data$start[i] <- substr(data$start[i], 2,5)#
		}#
		test2 <-substr(data$V1[i], 1, 1)#
		if(test2 == "\f") {#
			data$V1[i] <- substr(data$V1[i], 3, 10)#
		}#
	}#
	data <- data[nchar(data[,3]) <=4 & nchar(data[,4]) <= 4,] #
	#
	data[, c(1,3,4)]#
}
jan03dd <- dictionary("data-dictionaries/trimmed/jan03dd.txt")
may04dd <- dictionary("data-dictionaries/trimmed/may04dd.txt")
may04dd <- dictionary("data-dictionaries/trimmed/may04dd.txt")
may04dd <- dictionary("data-dictionaries/trimmed/may04dd.txt")
aug05dd <- dictionary("data-dictionaries/trimmed/augnov05dd.txt")
jan07dd <- dictionary("data-dictionaries/trimmed/jan07dd.txt")
jan09dd <- dictionary("data-dictionaries/trimmed/jan09dd.txt")
make_dates <- function(years, months){#
	expanded <- years[rep(1:length(years), each = length(months))]#
	combined <- cbind(expanded, rep(months, length(years)))#
	#
	dates <- as.data.frame(combined)#
	names(dates) <- c("year", "month")#
	dates#
}
jan03dates <- make_dates(c(2003:2004), c(1:12))[-c(17:24),]#
may04dates <- make_dates(c(2004:2005), c(1:12))[-c(1:4, 20:24),]#
aug05dates <- make_dates(c(2005:2006), c(1:12))[-c(1:7),]#
jan07dates <- make_dates(c(2007, 2008), c(1:12))#
jan09dates <- make_dates(2009, c(1:4))
add_dates <- function(dictionary, dates){#
	expanded <- dictionary[rep(1:nrow(dictionary), each = length(dates),]#
	as.data.frame(cbind(year = rep(dates$year, length(dictionary),#
					month = rep(dates$month, length(dictionary),#
					expanded))#
}
add_dates <- function(dictionary, dates){#
	expanded <- dictionary[rep(1:nrow(dictionary), each = length(dates)),]#
	as.data.frame(cbind(year = rep(dates$year, length(dictionary)),#
		month = rep(dates$month, length(dictionary)),expanded))#
}
part1 <- add_dates(jan03dd, jan03dates)#
part2 <- add_dates(may04dd, may04dates)#
part3 <- add_dates(aug05dd, aug05dates)#
part4 <- add_dates(jan07dd, jan07dates)#
part5 <- add_dates(jan09dd, jan09dates)
dim(jan03dd)
dim(jan03dates)
dictionary <- jan03dd
dates <- jan03dates
	expanded <- dictionary[rep(1:nrow(dictionary), each = length(dates)),]
dim(expanded)
length(dates)
	expanded <- dictionary[rep(1:nrow(dictionary), each = nrow(dates)),]
	as.data.frame(cbind(year = rep(dates$year, nrow(dictionary)),#
		month = rep(dates$month, nrow(dictionary)),expanded))
add_dates <- function(dictionary, dates){#
	expanded <- dictionary[rep(1:nrow(dictionary), each = nrow(dates)),]#
	as.data.frame(cbind(year = rep(dates$year, nrow(dictionary)),#
		month = rep(dates$month, nrow(dictionary)),expanded))#
}
part1 <- add_dates(jan03dd, jan03dates)#
part2 <- add_dates(may04dd, may04dates)#
part3 <- add_dates(aug05dd, aug05dates)#
part4 <- add_dates(jan07dd, jan07dates)#
part5 <- add_dates(jan09dd, jan09dates)
head(part1)
head(part2)
head(part3)
head(part4)
head(part5)
variables <- rbind(part1, part2, part3, part4, part5)
names(variables) <- c("year", "month", "name", "length", "start")
str(variables)
write.table(variables.csv, file = "variables.csv", sep = ",", row = F)
write.table(variables, file = "variables.csv", sep = ",", row = F)
vacay <- read.csv("tourism_and_growth.csv", header = T, stringsAsFactors = F)
head(vacay)
dim(vacay)
which(vacay$fips != vacay$msa_fips)
sum(vacay$fips == vacay$msa_fips)
try <-vacay[vacay$fips == vacay$msa_fips,]
dim(try)
vacay <- vacay[,-c(3, 9, 10)]
head(vacay)
vacay <- vacay[order(vacay$city, vacay$state, vacay$year),]
head(vacay)
vacay[1:10,]
vacay <- vacay[,c(1:4, 8:11, 5:7)]
head(vacay)
vacay <- read.csv("tourism_and_growth.csv", header = T, stringsAsFactors = F)
vacay <- vacay[,-c(3, 9, 10)]
vacay <- vacay[,c(1:4, 8:12, 5:7)]
head(vacay)
vacay <- read.csv("tourism_and_growth.csv", header = T, stringsAsFactors = F)
head(vacay)
vacay <- vacay[, c(1, 2, 4, 11:15, 5:10)]
head(vacay)
gdp_growth <- qplot(year, total, data = vacay, colour = city, facet = state, type = line)
library(ggplot2)
gdp_growth <- qplot(year, total, data = vacay, colour = city, facet = state, type = line)
gdp_growth <- qplot(year, total, data = vacay, colour = city, facet = "state", type = line)
gdp_growth
gdp_growth <- qplot(year, total, data = vacay, colour = city, facets = state, type = line)
gdp_growth
gdp_growth <- qplot(year, total, data = vacay, colour = city, facets = state, geom = line)
gdp_growth
gdp_growth <- qplot(year, total, data = vacay, colour = city, facets  = . ~ state, geom = line)
gdp_growth <- qplot(year, total, data = vacay, colour = city, facets  = . ~ state, geom = "line")
gdp_growth
gdp_growth <- qplot(year, total, data = vacay, colour = city, facets  = ~ state, geom = "line")
gdp_growth
gdp_growth <- qplot(year, total, data = vacay[!is.na(vacay$state),], colour = city, facets  = ~ state, geom = "line")
gdp_growth
gdp_growth + opts(legend.position = "none")
vacay <- vacay[order(vacay$total),]
vacay[1:10,]
vacay <- vacay[order(-vacay$total),]
vacay[1:10,]
vacay[10:50,]
vacay[50:100,]
?ggsave
gdp_growth <- qplot(year, total, data = vacay[!is.na(vacay$state),], colour = city, facets  = ~ state, geom = "line", main = "Total GDP by city", ylab = "total GDP")
gdp_growth + opts(legend.position = "none")
ggsave("totalgdpbycity.pdf")
gdp_shift <- qplot(year, real_estate/total*100, data = vacay[!is.na(vacay$state),], colour = city, facets  = ~ state, geom = "line", main = "Percent of GDP generated by real estate industries",ylab = "percent" )
gdp_shift + opts(legend.position = "none")
?ops
?Ops
?xor
test_group <- vacay[vacay$city xor c(bad_cities, good_cities),]
test_group <- vacay[vacay$city xor(c(bad_cities, good_cities)),]
bad_cities <- c("Los Angeles", "San Diego", "Miami", "San Francisco", "Las Vegas")#
good_cities <- c("Atlanta", "Dallas", "Seattle", "New York City", "Charlotte")
test_group <- vacay[vacay$city xor(c(bad_cities, good_cities)),]
c(bad_cities, good_cities)
a xor(a, b)
1 xor(1, 2)
?xor
test_group <- vacay[xor(vacay$city,c(bad_cities, good_cities)),]
?any
"a" == any(c("a", "b", "c"))
?match
"a" == %in$ c("a", "b", "c")
"a" %in$ c("a", "b", "c")
"a" %in% c("a", "b", "c")
test_group <- vacay[vacay$city %in% c(bad_cities, good_cities),]
dim(test_group)
test_group
for (i in 1:nrow(test_group)){#
	if (test_group$city[i] %in% bad_cities){#
		test_group$outcome[i] <- "bad"#
	} else test_group$outcome[i] <- "good"#
}
head(test_group)
tgdp_shift <- qplot(year, real_estate/total*100, data = test_group, colour = city, facets  = city ~ outcome, geom = "line", main = "Percent of GDP generated by real estate industries",ylab = "percent" )
ggsave("realestategdpbycity.pdf")
tgdp_shift + opts(legend.position = "none")
tgdp_shift <- qplot(year, real_estate/total*100, data = test_group, colour = city, facets  = outcome ~ city, geom = "line", main = "Percent of GDP generated by real estate industries",ylab = "percent" )
tgdp_shift + opts(legend.position = "none")
tgdp_shift <- qplot(year, real_estate/total*100, data = test_group, colour = city, facets  =  ~ outcome, geom = "line", main = "Percent of GDP generated by real estate industries",ylab = "percent" )
tgdp_shift + opts(legend.position = "none")
tgdp_shift
ggsave("realestategdptest.pdf")
tgdp_shift2 <- qplot(year, construction/total*100, data = test_group, colour = city, facets  =  ~ outcome, geom = "line", main = "Percent of GDP generated by construction industries",ylab = "percent" )
tgdp_shift2
test_group <- vacay[vacay$city %in% c(bad_cities, good_cities),]
for (i in 1:nrow(test_group)){#
	if (test_group$city[i] %in% bad_cities){#
		test_group$outcome[i] <- "bad"#
	} else test_group$outcome[i] <- "good"#
}
tgdp_shift2 <- qplot(year, construction/total*100, data = test_group, colour = city, facets  =  ~ outcome, geom = "line", main = "Percent of GDP generated by construction industries",ylab = "percent" )
tgdp_shift2
dim(test_group)
vacay[vacay$state == "NY",][order(-vacay$total),]
good_cities <- c("Atlanta", "Dallas", "Seattle", "New York", "Charlotte")
test_group <- vacay[vacay$city %in% c(bad_cities, good_cities),]
for (i in 1:nrow(test_group)){#
	if (test_group$city[i] %in% bad_cities){#
		test_group$outcome[i] <- "bad"#
	} else test_group$outcome[i] <- "good"#
}
tgdp_shift2 <- qplot(year, construction/total*100, data = test_group, colour = city, facets  =  ~ outcome, geom = "line", main = "Percent of GDP generated by construction industries",ylab = "percent" )
tgdp_shift
tgdp_shift2
bad_cities <- c("Phoenix", "San Diego", "Miami", "San Francisco", "Las Vegas")
test_group <- vacay[vacay$city %in% c(bad_cities, good_cities),]
for (i in 1:nrow(test_group)){#
	if (test_group$city[i] %in% bad_cities){#
		test_group$outcome[i] <- "bad"#
	} else test_group$outcome[i] <- "good"#
}
tgdp_shift2 <- qplot(year, construction/total*100, data = test_group, colour = city, facets  =  ~ outcome, geom = "line", main = "Percent of GDP generated by construction industries",ylab = "percent" )#
tgdp_shift2
bad_cities <- c("Scottsdale", "San Diego", "Miami", "San Francisco", "Las Vegas")
test_group <- vacay[vacay$city %in% c(bad_cities, good_cities),]
for (i in 1:nrow(test_group)){#
	if (test_group$city[i] %in% bad_cities){#
		test_group$outcome[i] <- "bad"#
	} else test_group$outcome[i] <- "good"#
}
tgdp_shift2 <- qplot(year, construction/total*100, data = test_group, colour = city, facets  =  ~ outcome, geom = "line", main = "Percent of GDP generated by construction industries",ylab = "percent" )#
tgdp_shift2
bad_cities <- c("Phoenix", "San Diego", "Miami", "San Francisco", "Las Vegas")
test_group <- vacay[vacay$city %in% c(bad_cities, good_cities),]#
#
for (i in 1:nrow(test_group)){#
	if (test_group$city[i] %in% bad_cities){#
		test_group$outcome[i] <- "bad"#
	} else test_group$outcome[i] <- "good"#
}
tgdp_shift <- qplot(year, real_estate/total*100, data = test_group, colour = city, facets  =  ~ outcome, geom = "line", main = "Percent of GDP generated by real estate industries",ylab = "percent" )#
tgdp_shift#
# + opts(legend.position = "none")#
ggsave("realestategdptest.pdf")
tgdp_shift2 <- qplot(year, construction/total*100, data = test_group, colour = city, facets  =  ~ outcome, geom = "line", main = "Percent of GDP generated by construction industries",ylab = "percent" )#
tgdp_shift2#
# + opts(legend.position = "none")#
ggsave("constructiongdptest.pdf")
tgdp_shift
tgdp_shift2
gdp_shift2 <- qplot(year, construction/total*100, data = vacay[!is.na(vacay$state),], colour = city, facets  =  ~ outcome, geom = "line", main = "Percent of GDP generated by construction industries",ylab = "percent" )#
gdp_shift2#
# + opts(legend.position = "none")#
ggsave("constructiongdpbycity.pdf")
gdp_shift2 <- qplot(year, construction/total*100, data = vacay[!is.na(vacay$state),], colour = city, facets  =  ~ state, geom = "line", main = "Percent of GDP generated by construction industries",ylab = "percent" )
gdp_shift2 + opts(legend.position = "none")
ggsave("constructiongdpbycity.pdf")
vacation_locale <- c("Orlando", "Las Vegas", "Miami", "Aspen",  "Myrtle Beach", "Jackson Hole")
boring <- c("Albany", "Cleveland", "Sacramento", "Worcester", "Amarillo")
