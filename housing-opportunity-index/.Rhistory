a1 <- z
a2 <- -3.5
a2 >= 0
a2 <- abs(a2)
			month_seq <- seq(a1, by = "-1 month", length.out = a2 + 1)
month_seq
difftime(month_seq[a2 + 1], month_seq[a2], #
				units = "secs")
secs <- as.double(difftime(month_seq[a2 + 1], month_seq[a2], #
				units = "secs"))
secs
a2 %% trunc(a2) * secs
month_seq[a2]
month_seq[a2 + 1]
month_seq[a2 + 1] + part
part <- a2 %% trunc(a2) * secs
month_seq[a2 + 1] + part
month_seq[a2 + 1]
month_seq[4.5]
month_seq[4.6]
month_seq[4.999]
month_seq[5.999]
month_seq[a2 + 2]
month_seq[a2 + 3]
month_add <- function (a1, a2){#
	#
	if (a2 >= 0){#
			month_seq <- seq(a1, by = "month", length.out = a2 + 1)#
		} else{ # adding negative months (subtracting)#
			a2 <- abs(a2)#
			month_seq <- seq(a1, by = "-1 month", length.out = a2 + 1)#
			}#
			#
			#
	if (a2 %% trunc(a2) == 0){ #whole months#
		month_seq[a2 + 1]#
			#
		} else { #partial months#
			secs <- as.double(difftime(month_seq[a2 + 2], month_seq[a2 + 1], #
				units = "secs"))#
			part <- a2 %% trunc(a2) * secs#
			month_seq[a2 + 1] + part#
			}#
	}
month_add(z, -3.5)
month_add(z, -3)
"+.POSIXt" <- function(e1, e2){#
	if (inherits(e2, "duration")){#
		#
		# adding seconds#
		withsec <- e1 + e2[1]#
		#
		#adding months#
		month_add(withsec, e2[2])#
		#
		} else {#
			base::'+.POSIXt'(e1, e2)#
			}#
	}
z + 3*m
z + -3*m
z + -3.5*m
class(z + -3.5*m)
class(z + -3*m)
z + 3.5*m
str(z + 3.5*m)
"+.POSIXt" <- function(e1, e2){#
	if (inherits(e2, "duration")){#
		#
		# adding seconds#
		withsec <- e1 + e2[1]#
		#
		#adding months#
		unname(month_add(withsec, e2[2]))#
		#
		} else {#
			base::'+.POSIXt'(e1, e2)#
			}#
	}
z + 3.5*m
str(z + 3.5*m)
z + -3.5*m
z + -3.5*m + 2*d
d
d[2]
trunc(0)
0 %% 0
month_add <- function (a1, a2){#
	if (a2 = 0){#
		return(a1)#
		}#
	else if (a2 > 0){#
			month_seq <- seq(a1, by = "month", length.out = a2 + 1)#
		} else { # adding negative months (subtracting)#
			a2 <- abs(a2)#
			month_seq <- seq(a1, by = "-1 month", length.out = a2 + 1)#
			}#
			#
			#
	if (a2 %% trunc(a2) == 0){ #whole months#
		month_seq[a2 + 1]#
			#
		} else { #partial months#
			secs <- as.double(difftime(month_seq[a2 + 2], month_seq[a2 + 1], #
				units = "secs"))#
			part <- a2 %% trunc(a2) * secs#
			month_seq[a2 + 1] + part#
			}#
	}
month_add <- function (a1, a2){#
	if (a2 == 0){#
		return(a1)#
		}#
	else if (a2 > 0){#
			month_seq <- seq(a1, by = "month", length.out = a2 + 1)#
		} else { # adding negative months (subtracting)#
			a2 <- abs(a2)#
			month_seq <- seq(a1, by = "-1 month", length.out = a2 + 1)#
			}#
			#
			#
	if (a2 %% trunc(a2) == 0){ #whole months#
		month_seq[a2 + 1]#
			#
		} else { #partial months#
			secs <- as.double(difftime(month_seq[a2 + 2], month_seq[a2 + 1], #
				units = "secs"))#
			part <- a2 %% trunc(a2) * secs#
			month_seq[a2 + 1] + part#
			}#
	}
z + -3.5*m + 2*d
z + -3.5*m
z + d
part
month_seq[a2 + 1]
month_seq[a2 + 1] + part
e1 <- z
e2 <- m
e1 + e2[1]
month_add(withsec, e2[2])
withsec <- e1 + e2[1]
month_add(withsec, e2[2]
)
e2 <- d
e1 + e2[1]
withsec <- e1 + e2[1]
month_add(withsec, e2[2])
e2 <- -1 * d
withsec <- e1 + e2[1]
unname(month_add(withsec, e2[2]))
e1
# subtracting #
"-.POSIXt" <- function(e1, e2){#
	'+.POSIXt'(e1, -1 * e2)#
	}
z - d
z - 3 * m
z - 3.5 * m
z - 3.5 * d
z - 3 * d
m + d
try <- m + d
z + try
z + 3.5 * try
3.5*(m+d)
m - d
months(1) - days(1)
months(1) - days(1) -> try
z + try
z + 3.5 * try
strpdate("2004-02-29", "%Y-%m-%d")
strptime("2004-02-29", "%Y-%m-%d")
strptime("2004-02-29", "%Y-%m-%d") -> a
class(a)
seq(a, by = "month", length.out = 5)
strptime("2004-03-31", "%Y-%m-%d") -> b
seq(b, by = "month", length.out = 5)
?seq.Date
hoi <- read.csv("/raw/wellsfargoHOI.csv", header = T)
hoi <- read.csv("\raw\wellsfargoHOI.csv", header = T)
hoi <- read.csv("raw/wellsfargoHOI.csv", header = T)
head(hoi)
summary(hoi)
dim(hoi)
head(hoi)
hoi <- hoi[!is.na(hoi$NAME),]
dim(hoi)
?!is.na
?is.na
hoi <- hoi[hoi$NAME != "",]
dim(hoi)
2206-1931
library(plyr)
df <- hoi[1,]
place <- rep(df[1,1], length(df))
df <- cbind(df, place)
df
dim(df)
df <- hoi[1,]
dim(df)
length(df)
nrow(df)
	place <- rep(df[1,1], nrow(df))
	df <- cbind(place, df)
df
str(hoi)
options(stringsAsFactors = FALSE)
hoi <- read.csv("raw/wellsfargoHOI.csv", header = T)
test <- hoi(1,1)
test <- hoi[1,1]
test
?strsplit
strsplit(test, ", ")
strsplit(test, ", ")[1]
strsplit(test, ", ")[][1]]
strsplit(test, ", ")[[1]]
strsplit(test, ", ")[[1]][1]
df <- hoi
	place <- strplit(df[1,1], ", ")
	place <- strsplit(df[1,1], ", ")
place
df <- hoi[1,]
	place <- strsplit(df[1,1], ", ")
	city <- rep(place[[1]][1], nrow(df))
	state <- rep(place[[1]][2], nrow(df))
	df <- cbind(city, state, df)
	df
	df[,-df$NAME]
str(df)
	df[,-3]
df <- hoi[1:3,]
df$do <- place[[1]][1]
df
summary(hoi$msa_fip)
hoi[,1:2]
dim(hoi)
add_place <- function(df){#
	place <- strsplit(df[1,1], ", ")#
	df$ctyname <- place[[1]][1]#
	df$stname <- place[[1]][2]#
	df[,c(71,72,2:70)]#
	}
df <- hoi[1:3,]
add_place(df)
add_place <- function(df){#
	place <- strsplit(df[1,1], ", ")#
	df$city <- place[[1]][1]#
	df$state <- place[[1]][2]#
	df[,c(71,72,2:70)]#
	}
summary(flag)
summary(hoi$flag)
tail(hoi)
add_place <- function(df){#
	place <- strsplit(df[1,1], ", ")#
	df$city <- place[[1]][1]#
	df$state <- place[[1]][2]#
	df[,c(71,72,1:70)]#
	}
hoi <- ddply(hoi, .(msa_fip), add_place)
dim(hoi)
hoi[1:5,1:5]
hoi[1:5,1:10]
hoi[11:15,1:10]
hoi[10:15,1:10]
hoi[9:15,1:10]
summary(city)
summary(hoi$city)
add_place <- function(df){#
	place <- strsplit(df[1,1], ", ")#
	df$city <- place[[1]][1]#
	df$state <- place[[1]][2]#
	df[-1,c(71,72,1:70)]#
	}
hoi <- ddply(hoi, .(msa_fip), add_place)
hoi[1:5,1:10]
options(stringsAsFactors = FALSE)#
hoi <- read.csv("raw/wellsfargoHOI.csv", header = T)#
#
# removing blank rows#
hoi <- hoi[hoi$NAME != "",]#
#
library(plyr) #
add_place <- function(df){#
	place <- strsplit(df[1,1], ", ")#
	df$city <- place[[1]][1]#
	df$state <- place[[1]][2]#
	df[-1,c(71,72,1:70)]#
	}#
	#
hoi <- ddply(hoi, .(msa_fip), add_place)
hoi[1:5,1:10]
str(hoi)
hoi1 <- read.csv("raw/wellsfargoHOI.csv", header = T)
library(reshape)
try <- melt(hoi)
head(try)
try(1:40,)
try[]1:40,]
try[1:40,]
try <- melt(hoi1)
hed(try)
head(try)
names(hoi1)
try <- melt(hoi1, id = c("NAME", "msa_fip", "flag"))
head(try)
melt_hoi <- melt(hoi, id = c("NAME", "msa_fip", "flag"))
melt_hoi <- ddply(melt_hoi, .(msa_fip), add_place)
dim(melt_hoi)
add_place <- function(df){#
	place <- strsplit(df[1,1], ", ")#
	df$city <- place[[1]][1]#
	df$state <- place[[1]][2]#
	df[-1,c(6,7,1:5)]#
	}
melt_hoi <- ddply(melt_hoi, .(msa_fip), add_place)
head(melt_hoi)
attr(melt_hoi)
str(melt_hoi)
melt_hoi <- melt(hoi, id = c("NAME", "msa_fip", "flag"))
hoi <- read.csv("raw/wellsfargoHOI.csv", header = T)
hoi <- hoi[hoi$NAME != "",]
melt_hoi <- melt(hoi, id = c("NAME", "msa_fip", "flag"))
head(melt_hoi)
this <- cast(melt_hoi, msa_fip + flag ~ NAME)
head(this)
dim(this)
head(melt_hoi)
new <- data.frame(melt_hoi)
melt_hoi[,melt_hoi$msa_fip == 10180]
new[ , new$msa_fip == 10180]
new[ , new$msa_fip == "10180"]
melt_hoi[melt_hoi$msa_fip == 10180,]
options(stringsAsFactors = FALSE)#
hoi <- read.csv("raw/wellsfargoHOI.csv", header = T)#
#
# removing blank rows#
hoi <- hoi[hoi$NAME != "",]#
#
#
#
library(plyr) #
add_place <- function(df){#
	place <- strsplit(df[1,1], ", ")#
	df$city <- place[[1]][1]#
	df$state <- place[[1]][2]#
	df[-1,c(71,72,1:70)]#
	}#
#
# create city and state	variables#
hoi <- ddply(hoi, .(msa_fip), add_place)
head(hoi)
melt_hoi <- melt(hoi, id = c("city", "state","NAME", "msa_fip", "flag"))
head(melt_hoi)
?colsplit
colsplit(melt_hoi, split = "_")
colsplit(melt_hoi$variable, split = "_")
new <- cbind(melt_hoi, colsplit(melt_hoi$variable, split = "_", names = c("quarter", "year")))
head(new)
new <- cbind(melt_hoi[,-6], colsplit(melt_hoi$variable, split = "_", names = c("quarter", "year")))
head(new)
dim(new)
cast_new <- cast(new,  ... ~NAME )
head(cast_new)
head(hoi)
head(melt_hoi)
new <- cbind(melt_hoi[,-c(5, 6)], colsplit(melt_hoi$variable, split = "_", names = c("quarter", "year")))
dim(new)
head(new)
cast_new <- cast(new,  ... ~ NAME )
head(cast_new)
dim(cast_new)
110885/18492
cast_new[20:30,]
cast_new[28:35,]
names(cast_new)
what <- as.numeric(substr(cast_new$quarter, 2))
?substr
what <- as.numeric(substr(cast_new$quarter, 2, 2))
head(what)
summary(cast_new$year)
levels(cast_new$year)
unique(cast_new$year)
for (i in 1:length(cast_new$year)){#
	if (length(cast_new$year[i] == 1){#
		cast_new$year <- paste("200", cast_new$year[i], sep ="")#
		} else {#
			cast_new$year <- paste("19", cast_new$year[i], sep ="")#
			}#
	}
for (i in 1:length(cast_new$year)){#
	if (length(cast_new$year[i]) == 1){#
		cast_new$year <- paste("200", cast_new$year[i], sep ="")#
		} else {#
			cast_new$year <- paste("19", cast_new$year[i], sep ="")#
			}#
	}
cast_new$year <- as.numeric(cast_new$year)
head(cast_new)
str(cast_new)
for (i in 1:length(cast_new$year)){#
	if (length(cast_new$year[i]) == 1){#
		cast_new$year[i] <- paste("200", cast_new$year[i], sep ="")#
		} else {#
			cast_new$year[i] <- paste("19", cast_new$year[i], sep ="")#
			}#
	}
head(cast_new)
cast_new <- cast(new,  ... ~ NAME )
cast_new$quarter <- as.numeric(substr(cast_new$quarter, 2, 2))
head(cast_new)
for (i in 1:length(cast_new$year)){#
	if (length(cast_new$year[i]) == 1){#
		cast_new$year[i] <- paste("200", cast_new$year[i], sep ="")#
		} else {#
			cast_new$year[i] <- paste("19", cast_new$year[i], sep ="")#
			}#
	}
head(cast_new)
